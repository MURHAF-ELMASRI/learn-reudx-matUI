[{"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\index.tsx":"1","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\App.tsx":"2","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\Reducer.tsx":"3","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\card.tsx":"4","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\util\\toggleButton.tsx":"5","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\interfaces\\Item.tsx":"6","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\CardPage.tsx":"7","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\FavoritePage.tsx":"8","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\interfaces\\index.tsx":"9","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\homePage.tsx":"10","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\Header.tsx":"11"},{"size":137,"mtime":1624954967682,"results":"12","hashOfConfig":"13"},{"size":1628,"mtime":1624961090590,"results":"14","hashOfConfig":"13"},{"size":2307,"mtime":1624978411335,"results":"15","hashOfConfig":"13"},{"size":2709,"mtime":1624977849933,"results":"16","hashOfConfig":"13"},{"size":305,"mtime":1624977337036,"results":"17","hashOfConfig":"13"},{"size":100,"mtime":1624959180817,"results":"18","hashOfConfig":"13"},{"size":5046,"mtime":1624970158942,"results":"19","hashOfConfig":"13"},{"size":2880,"mtime":1624978290568,"results":"20","hashOfConfig":"13"},{"size":202,"mtime":1624962784279,"results":"21","hashOfConfig":"13"},{"size":1512,"mtime":1624977856044,"results":"22","hashOfConfig":"13"},{"size":3490,"mtime":1624977088025,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"964sz2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\index.tsx",[],["49","50"],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\App.tsx",["51"],"import Home from './components/homePage';\nimport Favorite from './components/FavoritePage';\nimport Card from './components/CardPage';\nimport Header from './components/Header';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { ThemeProvider, createMuiTheme, Paper } from '@material-ui/core';\nimport { blue, red } from '@material-ui/core/colors';\nimport { Reducer } from './Reducer';\nimport { useState } from 'react';\n\n\nconst store = createStore(Reducer);\n\nexport default function App() {\n    const [isDark, setDark] = useState(false);\n\n    const darkTheme = createMuiTheme({\n        palette: {\n            type: 'light',\n            primary: blue\n        },\n    });\n\n    const lightTheme = createMuiTheme({\n        palette: {\n            type: 'dark',\n            primary: red\n        },\n    });\n    return (\n        <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n            <Paper>\n                <ReduxProvider store={store}>\n                    <BrowserRouter>\n                        <Header isDark={isDark} setDark={setDark} />\n                        <Switch>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route path=\"/favorite\" component={Favorite} />\n                            <Route path=\"/card\" component={Card} />\n                        </Switch>\n                    </BrowserRouter>\n                </ReduxProvider>\n            </Paper>\n        </ThemeProvider>\n    );\n}\n","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\Reducer.tsx",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\card.tsx",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\util\\toggleButton.tsx",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\interfaces\\Item.tsx",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\CardPage.tsx",["52","53","54"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Grid,\r\n    Card,\r\n    CardContent,\r\n    CardMedia,\r\n    CardHeader,\r\n    CardActions,\r\n    makeStyles,\r\n    IconButton,\r\n    Typography,\r\n    Box,\r\n} from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { DeleteForever, ArrowBackIos } from '@material-ui/icons';\r\n\r\nimport { GlobalState } from '../interfaces';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    media: {\r\n        width: 100,\r\n        height: 100,\r\n        margin: 20,\r\n        border: `2px solid ${theme.palette.grey[300]}`,\r\n    },\r\n    main: {\r\n        marginTop: 20,\r\n        padding: theme.spacing(3),\r\n    },\r\n    card: {\r\n        padding: '300px',\r\n        position: 'relative',\r\n    },\r\n    action: {\r\n        position: 'absolute',\r\n        top: 50,\r\n        right: 12\r\n    },\r\n}));\r\n\r\nfunction CardPage({ state, dispatch }: { state: GlobalState, dispatch: (a: any) => void }) {\r\n    console.log(state);\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Grid container spacing={3} className={classes.main}>\r\n                {state.card.length ? (\r\n                    state.card.map((e) => (\r\n                        <Grid key={e.id} item xs={8} className={classes.card}>\r\n                            <Card>\r\n                                <CardHeader\r\n                                    title={e.title}\r\n                                    subheader={e.price + ' $'}\r\n                                    action={\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                dispatch({ type: \"removeItem\", payloads: { id: e.id } })\r\n                                            }}\r\n                                        >\r\n                                            <DeleteForever />\r\n                                        </IconButton>\r\n                                    }\r\n                                />\r\n                                <CardMedia\r\n                                    image={e.image}\r\n                                    className={classes.media}\r\n                                />\r\n\r\n                                <CardActions className={classes.action}>\r\n                                    <Box\r\n                                        display=\"flex\"\r\n                                        flexDirection=\"column\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                dispatch({ type: 'addItem', payloads: e })\r\n                                            }}\r\n                                        >\r\n                                            <ArrowBackIos\r\n                                                style={{\r\n                                                    transform: 'rotate(90deg)',\r\n                                                }}\r\n                                            />\r\n                                        </IconButton>\r\n                                        <Box color=\"primary\" fontSize=\"2rem\">\r\n                                            {e.cnt}\r\n                                        </Box>\r\n                                        <IconButton\r\n                                            onClick={() => {\r\n                                                dispatch({ type: 'removeOneItem', payloads: { id: e.id } })\r\n                                            }}\r\n                                        >\r\n                                            <ArrowBackIos\r\n                                                style={{\r\n                                                    transform: 'rotate(-90deg)',\r\n                                                }}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Box>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))\r\n                ) : (\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        style={{ margin: 'auto' }}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                        Card is empty\r\n                    </Typography>\r\n                )}\r\n                <Grid xs={4} >\r\n                    {\r\n                        state.card.length !== 0 && (<Typography variant='h3'>\r\n                            Total:{state.card.reduce((count, e) => e.price * e.cnt + count, 0)}\r\n                        </Typography>)\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: GlobalState, ownProps: any) => {\r\n    return { state }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardPage);\r\n","D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\FavoritePage.tsx",["55","56"],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\interfaces\\index.tsx",[],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\homePage.tsx",["57","58"],"D:\\web_dev\\learn-matui-redux-ecommerce\\src\\components\\Header.tsx",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":1,"column":27,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"69","line":5,"column":5,"nodeType":"65","messageId":"66","endLine":5,"endColumn":16},{"ruleId":"63","severity":1,"message":"70","line":7,"column":5,"nodeType":"65","messageId":"66","endLine":7,"endColumn":16},{"ruleId":"63","severity":1,"message":"71","line":10,"column":5,"nodeType":"65","messageId":"66","endLine":10,"endColumn":8},{"ruleId":"63","severity":1,"message":"67","line":4,"column":28,"nodeType":"65","messageId":"66","endLine":4,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":32,"column":8,"nodeType":"74","endLine":32,"endColumn":10,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"@typescript-eslint/no-unused-vars","'devToolsEnhancer' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array. If 'dispatch' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [dispatch, state]",{"range":"81","text":"82"},[973,975],"[dispatch, state]"]